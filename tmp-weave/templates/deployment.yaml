apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--log-level"
            - "{{ .Values.logLevel }}"
            {{- if .Values.serverTLS.enable }}
            - "--tls-cert-file"
            - "/etc/tls-volume/tls.crt"
            - "--tls-private-key-file"
            - "/etc/tls-volume/tls.key"
            {{- else }}
            - "--insecure"
            {{- end }}
            {{- if .Values.metrics.enabled }}
            - "--enable-metrics"
            - "--metrics-address=:{{ .Values.metrics.service.port }}"
            {{- end }}
          {{- with .Values.additionalArgs }}
            {{- range . }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 9001
              protocol: TCP
          {{- if .Values.metrics.enabled }}
            - name: http-metrics
              containerPort: {{ .Values.metrics.service.port }}
              protocol: TCP
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
          {{- if .Values.envVars }}
          {{- with .Values.envVars }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.serverTLS.enable }}
          volumeMounts:
            - name: tls-volume
              readOnly: true
              mountPath: "/etc/tls-volume"
          {{- end }}
      {{- if .Values.serverTLS.enable }}
      volumes:
        - name: tls-volume
          secret:
            secretName: {{ .Values.serverTLS.secretName }}
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
