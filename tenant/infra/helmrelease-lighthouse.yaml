apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: lighthouse
  labels:
    toolkit.fluxcd.io/tenant: ${tenantname}
spec:
  releaseName: lighthouse
  serviceAccountName: helm-controller
  targetNamespace: "${tenantnamespaceprefix}${tenantname}"
  chart:
    spec:
      chart: jenkins-x/lighthouse
      version: 1.12.10
      sourceRef:
        kind: HelmRepository
        name: pauwels-labs
        namespace: "${tenantnamespaceprefix}${tenantname}"
  interval: 1m0s
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    cluster:
      crds:
        create: false
    image:
      parentRepository: 274295908850.dkr.ecr.eu-west-1.amazonaws.com/i/jenkins-x
      tag: 1.12.10
    engines:
      tekton: true
      jx: false
      jenkins: false
    user: "${tenantrepobot}"
    oauthSecretName: "token-${tenantrepohost}-${tenantrepobot}"
    hmacSecretName: "webhook-hmac-${tenantname}-primary"
    scope: "namespace"
    tektoncontroller:
      logLevel: debug
    webhooks:
      serviceName: ""
    keeper:
      datadog:
        enabled: false
    poller:
      enabled: true
      env:
        POLL_HOOK_ENDPOINT: http://lighthouse-webhooks/hook/poll
      datadog:
        enabled: false
    configMaps:
      create: true
      plugins: |
        approve:
        - lgtm_acts_as_approve: false
          repos:
          - ${tenantrepoorg}/nodejs-example
          require_self_approval: true
        config_updater:
          gzip: false
          maps:
            config.yaml:
              name: config
            plugins.yaml:
              name: plugins
        triggers:
        - repos:
          - ${tenantrepoorg}/nodejs-example
          ignore_ok_to_test: false
          elide_skipped_contexts: false
        plugins:
          ${tenantrepoorg}/nodejs-example:
          - config-updater
          - approve
          - lgtm
      config: |
        branch-protection:
          orgs: {}
          protect-tested-repos: true
        github:
          LinkURL: null
        owners_dir_excludes:
          default: null
          repos: null
        plank: {}
        pod_namespace: t-pauwels-labs-main
        postsubmits:
          ${tenantrepoorg}/nodejs-example:
          - agent: tekton-pipeline
            branches:
            - main
            context: nodejs-example
            name: nodejs-example
            pipeline_run_spec:
              serviceAccountName: pipeline-runner
              pipelineRef:
                name: clone-build-push
              workspaces:
              - name: shared-data
                volumeClaimTemplate:
                  spec:
                    accessModes:
                    - ReadWriteOnce
                    resources:
                      requests:
                        storage: 1Gi
              - name: docker-credentials
                secret:
                  secretName: ecr-credentials
                  items:
                  - key: ".dockerconfigjson"
                    path: "config.json"
              - name: git-credentials
                secret:
                  secretName: ssh-${tenantname}-$(tt.params.registry)-$(tt.params.repositoryownername)-$(tt.params.repositoryname)
                  defaultMode: 256
                  items:
                  - key: "identity"
                    path: "id_rsa"
                    mode: 256
                  - key: "known_hosts"
                    path: "known_hosts"
        presubmits: {}
        prowjob_namespace: t-pauwels-labs-main
        push_gateway:
          serve_metrics: false
        tide:
          context_options:
            from-branch-protection: true
            required-if-present-contexts: []
            skip-unknown-contexts: false
          merge_method: {}
          queries:
          - labels:
            - approved
            missingLabels:
            - do-not-merge
            - do-not-merge/hold
            - do-not-merge/work-in-progress
            - needs-ok-to-test      
            repos:
            - ${tenantrepoorg}/nodejs-example
