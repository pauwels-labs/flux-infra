apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: clone-build-push
  namespace: "${infranamespaceprefix}tekton-pipelines"
spec:
  description: | 
    This pipeline clones a git repo, builds a Docker image with Kaniko and
    pushes it to a registry
  params:
  - name: revision
    type: string
  - name: sshURL
    type: string
  - name: imageURL
    type: string
  - name: ghTokenSecretName
    type: string
  - name: sshSecretName
    type: string
  workspaces:
  - name: shared-data
    description: "Contains the cloned git repo"
  - name: git-credentials
    description: "Contains SSH credentials for authenticating to private Git repos"
  - name: docker-credentials
    description: "Contains docker credentials for authenticating to private container registry"
  tasks:
  - name: fetch-source
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: git-clone
      - name: namespace
        value: "${infranamespaceprefix}tekton-pipelines"
    workspaces:
    - name: output
      workspace: shared-data
    # - name: ssh-directory
    #   workspace: git-credentials
    params:
    - name: url
      value: "$(params.sshURL)"
    - name: revision
      value: "$(params.revision)"
    - name: depth
      value: "1"
    - name: userHome
      value: "/home/git"
    - name: sshSecretName
      value: "$(params.sshSecretName)"
  - name: version
    runAfter: ["fetch-source"]
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: version
      - name: namespace
        value: "${infranamespaceprefix}tekton-pipelines"
    workspaces:
    - name: source
      workspace: shared-data
    # - name: ssh-directory
    #   workspace: git-credentials
    params:
    - name: sshSecretName
      value: "$(params.sshSecretName)"
  - name: build-push
    runAfter: ["version"]
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: kaniko
      - name: namespace
        value: "${infranamespaceprefix}tekton-pipelines"
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: docker-credentials
    params:
    - name: IMAGE
      value: "$(params.imageURL):$(tasks.version.results.RELEASE_VERSION)"
    - name: EXTRA_ARGS
      value: [
        '--cache=true',
        '--cache-dir=/kaniko/cache',
        '--cache-repo=$(params.imageURL)/cache'
      ]
  - name: release
    runAfter: ["build-push"]
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: release
      - name: namespace
        value: "${infranamespaceprefix}tekton-pipelines"
    workspaces:
    - name: source
      workspace: shared-data
    # - name: ssh-directory
    #   workspace: git-credentials
    params:
    - name: ghTokenSecretName
      value: "$(params.ghTokenSecretName)"
    - name: sshSecretName
      value: "$(params.sshSecretName)"
