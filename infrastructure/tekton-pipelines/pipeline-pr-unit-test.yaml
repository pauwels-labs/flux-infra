apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pr-unit-test
  namespace: "${infranamespaceprefix}tekton-pipelines"
spec:
  description: | 
    This pipeline clones a git repo and runs its tests as defined by its Makefile
  params:
  - name: BUILD_ID
    type: string
  - name: PULL_PULL_SHA
    type: string
  - name: PULL_NUMBER
    type: string
  - name: REPO_URL
    type: string
  - name: REPO_OWNER
    type: string
  - name: REPO_NAME
    type: string
  - name: tenantName
    type: string
  - name: imageRegistry
    type: string
  - name: ghTokenSecretName
    type: string
  workspaces:
  - name: shared-data
    description: "Contains the cloned git repo"
  - name: git-credentials
    description: "Contains SSH credentials for authenticating to private Git repos"
    optional: true
  - name: docker-credentials
    description: "Contains docker credentials for authenticating to private container registry"
  tasks:
  - name: fetch-source
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: git-clone
      - name: namespace
        value: "${infranamespaceprefix}tekton-pipelines"
    workspaces:
    - name: output
      workspace: shared-data
    params:
    - name: url
      value: "$(params.REPO_URL)"
    - name: revision
      value: "$(params.PULL_PULL_SHA)"
    - name: depth
      value: "1"
    - name: userHome
      value: "/home/git"
    - name: sshSecretName
      value: "ssh-$(params.tenantName)-github-$(params.REPO_OWNER)-$(params.REPO_NAME)"
    - name: prNumber
      value: "$(params.PULL_NUMBER)"
  - name: version
    runAfter: ["fetch-source"]
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: pr-version
      - name: namespace
        value: "${infranamespaceprefix}tekton-pipelines"
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: prNumber
      value: "$(params.PULL_NUMBER)"
    - name: prSHA
      value: "$(params.PULL_PULL_SHA)"
    - name: buildTimestamp
      value: "$(params.BUILD_ID)"
  - name: build-push
    runAfter: ["version"]
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: kaniko
      - name: namespace
        value: "${infranamespaceprefix}tekton-pipelines"
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: docker-credentials
    params:
    - name: DOCKERFILE
      value: ./Dockerfile.test
    - name: IMAGE
      value: "$(params.imageRegistry)/t/$(params.tenantName)/github/$(params.REPO_OWNER)/$(params.REPO_NAME):test-pr$(tasks.version.results.PR_VERSION)"
    - name: EXTRA_ARGS
      value: [
        "--cache=true",
        "--cache-dir=/kaniko/cache",
        "--cache-repo=$(params.imageRegistry)/t/$(params.tenantName)/github/$(params.REPO_OWNER)/$(params.REPO_NAME)/cache"
      ]
  - name: test
    runAfter: ["build-push"]
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: test
      - name: namespace
        value: "${infranamespaceprefix}tekton-pipelines"
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: image
      value: "$(params.imageRegistry)/t/$(params.tenantName)/github/$(params.REPO_OWNER)/$(params.REPO_NAME):test-pr$(tasks.version.results.PR_VERSION)"
    - name: ghTokenSecretName
      value: "$(params.ghTokenSecretName)"
    - name: prNumber
      value: "$(params.PULL_NUMBER)"    
