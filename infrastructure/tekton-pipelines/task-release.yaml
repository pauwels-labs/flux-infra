apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: release
  namespace: "${infranamespaceprefix}tekton-pipelines"
  labels:
    app.kubernetes.io/version: "0.1.0"
  annotations:
    tekton.dev/pipelines.minVersion: "0.41.0"
    tekton.dev/categories: Semantic Versioning
    tekton.dev/tags: release
    tekton.dev/displayName: "Push the semantic version as a tag and release to the repo host"
    tekton.dev/platforms: "linux/amd64,linux/arm64,linux/ppc64le"
spec:
  description: >-
    This Task uses the CHANGELOG.md to push an appropriate tag and release to the repo host.
  params:
  - name: ghTokenSecretName
    description: Name of the secret containing the GitHub token
    type: string
  - name: sshSecretName
    description: |
      Optional name of a secret containing "identity" and "known_hosts" keys which will
      be used to populate the SSH directory IF a workspace is not provided
    type: string
    default: "noop"
  workspaces:
  - name: source
    description: Holds the context and Dockerfile
  - name: ssh-directory
    description: Includes id_rsa and known_hosts
    optional: true
    mountPath: /notroot/.ssh
  steps:
  - name: wait-for-sidecar
    workingDir: $(workspaces.source.path)
    image: docker.io/library/bash:5.1.4@sha256:c523c636b722339f41b6a431b44588ab2f762c5de5ec3bd7964420ff982fb1d9
    script: |
      #!/bin/sh
      set -eu

      i=0
      echo "WAITING FOR SIDECAR"
      until wget -qO- -o /dev/null "http://localhost:15021/healthz/ready"; do
        i=$((i+1))
        if [[ $i -eq 5 ]]; then
          break
        fi
        echo "WAITING FOR SIDECAR"
        sleep 3
      done
      if [[ $i -eq 5 ]]; then
        echo "SIDECAR UNAVAILABLE, RUNNING WITHOUT"
      else
        echo "SIDECAR AVAILABLE"
      fi

      echo "$i" > sidecar-check-counter
      exit 0
  - name: release
    workingDir: $(workspaces.source.path)
    image: 274295908850.dkr.ecr.eu-west-1.amazonaws.com/i/change/change:0.14.5-alpine3.16
    env:
    - name: PARAM_WORKSPACE_SOURCE_PATH
      value: $(workspaces.source.path)
    - name: GH_TOKEN
      valueFrom:
        secretKeyRef:
          name: $(params.ghTokenSecretName)
          key: token
    - name: HOME
      value: /notroot
    - name: WORKSPACE_SSH_DIRECTORY_BOUND
      value: $(workspaces.ssh-directory.bound)
    - name: SSH_IDENTITY
      valueFrom:
        secretKeyRef:
          name: $(params.sshSecretName)
          key: identity
          optional: true
    - name: SSH_KNOWN_HOSTS
      valueFrom:
        secretKeyRef:
          name: $(params.sshSecretName)
          key: known_hosts
          optional: true
    script: |
      #!/usr/bin/env sh
      set -eu

      if [ "$${WORKSPACE_SSH_DIRECTORY_BOUND}" != "true" ] && [ ! -z "$${SSH_IDENTITY}" ] ; then
        mkdir -p "$${HOME}"/.ssh
        rm -rf "$${HOME}"/.ssh/*
        echo "$${SSH_IDENTITY}" > "$${HOME}"/.ssh/id_rsa
        if [ ! -z "$${SSH_KNOWN_HOSTS}" ] ; then
          echo "$${SSH_KNOWN_HOSTS}" > "$${HOME}"/.ssh/known_hosts
        fi
        chmod 700 "$${HOME}"/.ssh
        chmod -R 400 "$${HOME}"/.ssh/*
      fi

      git config --global --add safe.directory "$PARAM_WORKSPACE_SOURCE_PATH"
      change auth --token "$GH_TOKEN" || return 1
      change tag -p || return 1
      change post || return 1
    securityContext:
      runAsUser: 10000
  - name: shutdown-sidecar
    workingDir: $(workspaces.source.path)
    image: docker.io/library/bash:5.1.4@sha256:c523c636b722339f41b6a431b44588ab2f762c5de5ec3bd7964420ff982fb1d9
    script: |
      #!/bin/sh
      set -eu

      i=$(cat "sidecar-check-counter")
      if [[ $i -lt 5 ]]; then
        echo "QUITTING SIDECAR"
        wget -qO- -o /dev/null --post-data "" http://localhost:15020/quitquitquit > /dev/null
        echo "SIDECAR SHUTDOWN COMMAND ISSUED"
      fi

      exit 0
