apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana-tempo
  namespace: flux-system
spec:
  releaseName: grafana-tempo
  serviceAccountName: helm-controller
  targetNamespace: "${infranamespaceprefix}grafana-tempo"
  chart:
    spec:
      chart: grafana/tempo-distributed
      version: 1.4.3
      sourceRef:
        kind: HelmRepository
        name: pauwels-labs
        namespace: flux-system
  interval: 1m0s
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    global:
      image:
        registry: 274295908850.dkr.ecr.eu-west-1.amazonaws.com
    compactor:
      extraArgs:
      - "-config.expand-env=true"
      extraEnv:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
    distributor:
      extraArgs:
      - "-config.expand-env=true"
      extraEnv:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
    ingester:
      extraArgs:
      - "-config.expand-env=true"
      extraEnv:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
    querier:
      extraArgs:
      - "-config.expand-env=true"
      extraEnv:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
    queryFrontend:
      extraArgs:
      - "-config.expand-env=true"
      extraEnv:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
    tempo:
      memberlist:
        appProtocol: tcp
      image:
        repository: i/grafana/tempo
        tag: main-c633387
      structuredConfig:
        memberlist:
          bind_addr:
          - "::"
          bind_port: 7946
        compactor:
          ring:
            kvstore:
              store: memberlist
            enable_inet6: true
        ingester:
          lifecycler:
            address: "::"
            enable_inet6: true
        server:
          grpc_listen_address: "[::0]"
          grpc_listen_port: 9095
          http_listen_address: "[::0]"
          http_listen_port: 3200
    serviceAccount:
      annotations:
        eks.amazonaws.com/role-arn: "${grafanatempoiamrolearn}"
    multitenancyEnabled: true
    traces:
      otlp:
        grpc:
          enabled: true
          receiverConfig:
            endpoint: "[::0]:4317"
        http:
          enabled: true
          receiverConfig:
            endpoint: "[::0]:4318"
    storage:
      trace:
        backend: s3
        s3:
          bucket: "${grafanatempotracesbucketname}"
          region: "eu-west-1"
          endpoint: "s3.eu-west-1.amazonaws.com"
      admin:
        backend: s3
        s3:
          bucket: "${grafanatempoadminbucketname}"
          region: "eu-west-1"
          endpoint: "s3.eu-west-1.amazonaws.com"
    minio:
      enabled: false
    gateway:
      enabled: false
    enterprise:
      enabled: false
    memcached:
      enabled: false
    # Have to override this because it includes config values that no longer exist and
    # canot be removed
    config: |
      multitenancy_enabled: {{ .Values.multitenancyEnabled }}

      usage_report:
        reporting_enabled: {{ .Values.reportingEnabled }}

      {{- if .Values.enterprise.enabled }}
      license:
        path: "/license/license.jwt"

      admin_api:
        leader_election:
          enabled: true
          ring:
            kvstore:
              store: "memberlist"

      auth:
        type: enterprise

      http_api_prefix: {{get .Values.tempo.structuredConfig "http_api_prefix"}}

      admin_client:
        storage:
          backend: {{.Values.storage.admin.backend}}
          {{- if eq .Values.storage.admin.backend "s3"}}
          s3:
            {{- toYaml .Values.storage.admin.s3 | nindent 6}}
          {{- end}}
          {{- if eq .Values.storage.admin.backend "gcs"}}
          gcs:
            {{- toYaml .Values.storage.admin.gcs | nindent 6}}
          {{- end}}
          {{- if eq .Values.storage.admin.backend "azure"}}
          azure:
            {{- toYaml .Values.storage.admin.azure | nindent 6}}
          {{- end}}
          {{- if eq .Values.storage.admin.backend "swift"}}
          swift:
            {{- toYaml .Values.storage.admin.swift | nindent 6}}
          {{- end}}
          {{- if eq .Values.storage.admin.backend "filesystem"}}
          filesystem:
            {{- toYaml .Values.storage.admin.filesystem | nindent 6}}
          {{- end}}
      {{- end }}

      {{- if and .Values.enterprise.enabled .Values.enterpriseGateway.useDefaultProxyURLs }}
      gateway:
        proxy:
          admin_api:
            url: http://{{ template "tempo.fullname" . }}-admin-api.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}
          compactor:
            url: http://{{ template "tempo.fullname" . }}-compactor.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}
          default:
            url: http://{{ template "tempo.fullname" . }}-admin-api.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}
          distributor:
            url: http://{{ template "tempo.fullname" . }}-distributor.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}
          distributor_ingest:
            url: h2c://{{ template "tempo.fullname" . }}-distributor.{{ .Release.Namespace }}.svc:4317
          ingester:
            url: http://{{ template "tempo.fullname" . }}-ingester.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}
          querier:
            url: http://{{ template "tempo.fullname" . }}-querier.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}
          query_frontend:
            url: http://{{ template "tempo.fullname" . }}-query-frontend.{{ .Release.Namespace }}.svc:{{ include "tempo.serverHttpListenPort" . }}{{get .Values.tempo.structuredConfig "http_api_prefix"}}
      {{- end }}

      compactor:
        compaction:
          block_retention: {{ .Values.compactor.config.compaction.block_retention }}
          compacted_block_retention: {{ .Values.compactor.config.compaction.compacted_block_retention }}
          compaction_window: {{ .Values.compactor.config.compaction.compaction_window }}
          v2_in_buffer_bytes: {{ .Values.compactor.config.compaction.v2_in_buffer_bytes }}
          v2_out_buffer_bytes: {{ .Values.compactor.config.compaction.v2_out_buffer_bytes }}
          max_compaction_objects: {{ .Values.compactor.config.compaction.max_compaction_objects }}
          max_block_bytes: {{ .Values.compactor.config.compaction.max_block_bytes }}
          retention_concurrency: {{ .Values.compactor.config.compaction.retention_concurrency }}
          v2_prefetch_traces_count: {{ .Values.compactor.config.compaction.v2_prefetch_traces_count }}
          max_time_per_tenant: {{ .Values.compactor.config.compaction.max_time_per_tenant }}
          compaction_cycle: {{ .Values.compactor.config.compaction.compaction_cycle }}
        ring:
          kvstore:
            store: memberlist
      {{- if .Values.metricsGenerator.enabled }}
      metrics_generator:
        ring:
          kvstore:
            store: memberlist
        processor:
          {{- toYaml .Values.metricsGenerator.config.processor | nindent 6 }}
        storage:
          {{- toYaml .Values.metricsGenerator.config.storage | nindent 6 }}
        registry:
          {{- toYaml .Values.metricsGenerator.config.registry | nindent 6 }}
      {{- end }}
      distributor:
        ring:
          kvstore:
            store: memberlist
        receivers:
          {{- if  or (.Values.traces.jaeger.thriftCompact.enabled) (.Values.traces.jaeger.thriftBinary.enabled) (.Values.traces.jaeger.thriftHttp.enabled) (.Values.traces.jaeger.grpc.enabled) }}
          jaeger:
            protocols:
              {{- if .Values.traces.jaeger.thriftCompact.enabled }}
              thrift_compact:
                {{- $mergedJaegerThriftCompactConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:6831") .Values.traces.jaeger.thriftCompact.receiverConfig }}
                {{- toYaml $mergedJaegerThriftCompactConfig | nindent 10 }}
              {{- end }}
              {{- if .Values.traces.jaeger.thriftBinary.enabled }}
              thrift_binary:
                {{- $mergedJaegerThriftBinaryConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:6832") .Values.traces.jaeger.thriftBinary.receiverConfig }}
                {{- toYaml $mergedJaegerThriftBinaryConfig | nindent 10 }}
              {{- end }}
              {{- if .Values.traces.jaeger.thriftHttp.enabled }}
              thrift_http:
                {{- $mergedJaegerThriftHttpConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:14268") .Values.traces.jaeger.thriftHttp.receiverConfig }}
                {{- toYaml $mergedJaegerThriftHttpConfig | nindent 10 }}
              {{- end }}
              {{- if .Values.traces.jaeger.grpc.enabled }}
              grpc:
                {{- $mergedJaegerGrpcConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:14250") .Values.traces.jaeger.grpc.receiverConfig }}
                {{- toYaml $mergedJaegerGrpcConfig | nindent 10 }}
              {{- end }}
          {{- end }}
          {{- if .Values.traces.zipkin.enabled }}
          zipkin:
            {{- $mergedZipkinReceiverConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:9411") .Values.traces.zipkin.receiverConfig }}
            {{- toYaml $mergedZipkinReceiverConfig | nindent 6 }}
          {{- end }}
          {{- if or (.Values.traces.otlp.http.enabled) (.Values.traces.otlp.grpc.enabled) }}
          otlp:
            protocols:
              {{- if .Values.traces.otlp.http.enabled }}
              http:
                {{- $mergedOtlpHttpReceiverConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:4318") .Values.traces.otlp.http.receiverConfig }}
                {{- toYaml $mergedOtlpHttpReceiverConfig | nindent 10 }}
              {{- end }}
              {{- if .Values.traces.otlp.grpc.enabled }}
              grpc:
                {{- $mergedOtlpGrpcReceiverConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:4317") .Values.traces.otlp.grpc.receiverConfig }}
                {{- toYaml $mergedOtlpGrpcReceiverConfig | nindent 10 }}
              {{- end }}
          {{- end }}
          {{- if .Values.traces.opencensus.enabled }}
          opencensus:
            {{- $mergedOpencensusReceiverConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:55678") .Values.traces.opencensus.receiverConfig }}
            {{- toYaml $mergedOpencensusReceiverConfig | nindent 6 }}
          {{- end }}
          {{- if .Values.traces.kafka }}
          kafka:
            {{- toYaml .Values.traces.kafka | nindent 6 }}
          {{- end }}
        {{- if or .Values.distributor.config.log_received_traces .Values.distributor.config.log_received_spans.enabled }}
        log_received_spans:
          enabled: {{ or .Values.distributor.config.log_received_traces .Values.distributor.config.log_received_spans.enabled }}
          include_all_attributes: {{ .Values.distributor.config.log_received_spans.include_all_attributes }}
          filter_by_status_error: {{ .Values.distributor.config.log_received_spans.filter_by_status_error }}
        {{- end }}
        {{- if .Values.distributor.config.extend_writes }}
        extend_writes: {{ .Values.distributor.config.extend_writes }}
        {{- end }}
      querier:
        frontend_worker:
          frontend_address: {{ include "tempo.resourceName" (dict "ctx" . "component" "query-frontend-discovery") }}:9095
          {{- if .Values.querier.config.frontend_worker.grpc_client_config }}
          grpc_client_config:
            {{- toYaml .Values.querier.config.frontend_worker.grpc_client_config | nindent 6 }}
          {{- end }}
        trace_by_id:
          query_timeout: {{ .Values.querier.config.trace_by_id.query_timeout }}
        search:
          external_endpoints: {{- toYaml .Values.querier.config.search.external_endpoints | nindent 6 }}
          query_timeout: {{ .Values.querier.config.search.query_timeout }}
          prefer_self: {{ .Values.querier.config.search.prefer_self }}
          external_hedge_requests_at: {{ .Values.querier.config.search.external_hedge_requests_at }}
          external_hedge_requests_up_to: {{ .Values.querier.config.search.external_hedge_requests_up_to }}
        max_concurrent_queries: {{ .Values.querier.config.max_concurrent_queries }}
      query_frontend:
        max_retries: {{ .Values.queryFrontend.config.max_retries }}
        search:
          target_bytes_per_job: {{ .Values.queryFrontend.config.search.target_bytes_per_job }}
          concurrent_jobs: {{ .Values.queryFrontend.config.search.concurrent_jobs }}
        trace_by_id:
          query_shards: {{ .Values.queryFrontend.config.trace_by_id.query_shards }}
          hedge_requests_at: {{ .Values.queryFrontend.config.trace_by_id.hedge_requests_at }}
          hedge_requests_up_to: {{ .Values.queryFrontend.config.trace_by_id.hedge_requests_up_to }}

      ingester:
        lifecycler:
          ring:
            replication_factor: {{ .Values.ingester.config.replication_factor }}
            kvstore:
              store: memberlist
          tokens_file_path: /var/tempo/tokens.json
        {{- if .Values.ingester.config.trace_idle_period }}
        trace_idle_period: {{ .Values.ingester.config.trace_idle_period }}
        {{- end }}
        {{- if .Values.ingester.config.flush_check_period }}
        flush_check_period: {{ .Values.ingester.config.flush_check_period }}
        {{- end }}
        {{- if .Values.ingester.config.max_block_bytes }}
        max_block_bytes: {{ .Values.ingester.config.max_block_bytes }}
        {{- end }}
        {{- if .Values.ingester.config.max_block_duration }}
        max_block_duration: {{ .Values.ingester.config.max_block_duration }}
        {{- end }}
        {{- if .Values.ingester.config.complete_block_timeout }}
        complete_block_timeout: {{ .Values.ingester.config.complete_block_timeout }}
        {{- end }}
      memberlist:
        abort_if_cluster_join_fails: false
        join_members:
          - {{ include "tempo.fullname" . }}-gossip-ring
      overrides:
        {{- toYaml .Values.global_overrides | nindent 2 }}
        {{- if .Values.metricsGenerator.enabled }}
        metrics_generator_processors:
        {{- range .Values.global_overrides.metrics_generator_processors }}
        - {{ . }}
        {{- end }}
        {{- end }}
      server:
        http_listen_port: {{ .Values.server.httpListenPort }}
        log_level: {{ .Values.server.logLevel }}
        log_format: {{ .Values.server.logFormat }}
        grpc_server_max_recv_msg_size: {{ .Values.server.grpc_server_max_recv_msg_size }}
        grpc_server_max_send_msg_size: {{ .Values.server.grpc_server_max_send_msg_size }}
        http_server_read_timeout: {{ .Values.server.http_server_read_timeout }}
        http_server_write_timeout: {{ .Values.server.http_server_write_timeout }}
      storage:
        trace:
          block:
            version: {{.Values.storage.trace.block.version}}
          backend: {{.Values.storage.trace.backend}}
          {{- if eq .Values.storage.trace.backend "s3"}}
          s3:
            {{- toYaml .Values.storage.trace.s3 | nindent 6}}
          {{- end }}
          {{- if eq .Values.storage.trace.backend "gcs"}}
          gcs:
            {{- toYaml .Values.storage.trace.gcs | nindent 6}}
          {{- end }}
          {{- if eq .Values.storage.trace.backend "azure"}}
          azure:
            {{- toYaml .Values.storage.trace.azure | nindent 6}}
          {{- end }}
          blocklist_poll: 5m
          local:
            path: /var/tempo/traces
          wal:
            path: /var/tempo/wal
          {{- if .Values.memcached.enabled }}
          cache: memcached
          memcached:
            consistent_hash: true
            host: {{ include "tempo.fullname" . }}-memcached
            service: memcached-client
            timeout: 500ms
          {{- end }}
