apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana-mimir
  namespace: flux-system
spec:
  releaseName: grafana-mimir
  serviceAccountName: helm-controller
  targetNamespace: "${infranamespaceprefix}grafana-mimir"
  chart:
    spec:
      chart: grafana/mimir-distributed
      version: 4.4.1
      sourceRef:
        kind: HelmRepository
        name: pauwels-labs
        namespace: flux-system
  interval: 1m0s
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    smoke_test:
      image:
        repository: 274295908850.dkr.ecr.eu-west-1.amazonaws.com/i/grafana/mimir-continuous-test
        tag: main-409a26d9d
    continuous_test:
      enabled: true
      image:
        repository: 274295908850.dkr.ecr.eu-west-1.amazonaws.com/i/grafana/mimir-continuous-test
        tag: main-409a26d9d
    image:
      repository: 274295908850.dkr.ecr.eu-west-1.amazonaws.com/i/grafana/mimir
      tag: main-409a26d9d
    nginx:
      enabled: false
    gateway:
      enabledNonEnterprise: false
    minio:
      enabled: false
    serviceAccount:
      annotations:
        eks.amazonaws.com/role-arn: ${grafanamimiriamrolearn}
    global:
      podAnnotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "7946,9094,9095"
        traffic.sidecar.istio.io/excludeOutboundPorts: "7946,9094,9095"
      extraEnv:
      - name: POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
    alertmanager:
      zoneAwareReplication:
        enabled: true
        topologyKey: "kubernetes.io/hostname"
        zones:
        - name: eu-west-1a
          nodeSelector:
            topology.kubernetes.io/zone: eu-west-1a
        - name: eu-west-1b
          nodeSelector:
            topology.kubernetes.io/zone: eu-west-1b
        - name: eu-west-1c
          nodeSelector:
            topology.kubernetes.io/zone: eu-west-1c        
    store_gateway:
      zoneAwareReplication:
        enabled: true
        topologyKey: "kubernetes.io/hostname"
        zones:
        - name: eu-west-1a
          nodeSelector:
            topology.kubernetes.io/zone: eu-west-1a
        - name: eu-west-1b
          nodeSelector:
            topology.kubernetes.io/zone: eu-west-1b
        - name: eu-west-1c
          nodeSelector:
            topology.kubernetes.io/zone: eu-west-1c        
    ingester:
      zoneAwareReplication:
        enabled: true
        topologyKey: "kubernetes.io/hostname"
        zones:
        - name: eu-west-1a
          nodeSelector:
            topology.kubernetes.io/zone: eu-west-1a
        - name: eu-west-1b
          nodeSelector:
            topology.kubernetes.io/zone: eu-west-1b
        - name: eu-west-1c
          nodeSelector:
            topology.kubernetes.io/zone: eu-west-1c
    mimir:
      structuredConfig:
        common:
          storage:
            backend: s3
            s3:
              endpoint: "s3.eu-west-1.amazonaws.com"
              region: "eu-west-1"
        overrides_exporter:
          ring:
            instance_enable_ipv6: true
        alertmanager:
          sharding_ring:
            instance_enable_ipv6: true
        alertmanager_storage:
          backend: s3
          storage_prefix: alerts
          s3:
            bucket_name: "${grafanamimirrulerbucketname}"
        blocks_storage:
          storage_prefix: blocks
          s3:
            bucket_name: "${grafanamimirblocksbucketname}"
        compactor:
          sharding_ring:
            instance_enable_ipv6: true
        distributor:
          ring:
            instance_enable_ipv6: true
        frontend:
          ring:
            instance_enable_ipv6: true
          #address: "[$${POD_IP}]"
        ingester:
          ring:
            instance_enable_ipv6: true
        memberlist:
          bind_addr:
          - "[::0]"
          advertise_addr: "$${POD_IP}"
        query_scheduler:
          ring:
            instance_enable_ipv6: true
        ruler:
          alertmanager_url: dnssrvnoa+http://_http-metrics._tcp.{{ template "mimir.fullname" . }}-alertmanager-headless.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:8080/alertmanager
          query_frontend:
            address: dns:///grafana-mimir-query-frontend-headless.${infranamespaceprefix}grafana-mimir.svc:9095
          ring:
            instance_enable_ipv6: true
        ruler_storage:
          storage_prefix: ruler
          s3:
            bucket_name: "${grafanamimirrulerbucketname}"
        store_gateway:
          sharding_ring:
            instance_enable_ipv6: true
        server:
          log_level: "info"
