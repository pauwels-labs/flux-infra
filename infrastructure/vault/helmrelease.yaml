apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vault
  namespace: flux-system
spec:
  releaseName: vault
  serviceAccountName: helm-controller
  targetNamespace: vault
  chart:
    spec:
      chart: hashicorp/vault
      version: 0.22.0
      sourceRef:
        kind: HelmRepository
        name: pauwels-labs
        namespace: flux-system
  interval: 2m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    global:
      enabled: true
      tlsDisable: false
    injector:
      enabled: false
      image:
        repository: 274295908850.dkr.ecr.eu-west-1.amazonaws.com/hashicorp/vault-k8s
      agentImage:
        repository: 274295908850.dkr.ecr.eu-west-1.amazonaws.com/hashicorp/vault
    server:
      image:
        repository: 274295908850.dkr.ecr.eu-west-1.amazonaws.com/hashicorp/vault
      serviceAccount:
        annotations:
          eks.amazonaws.com/role-arn: ${certmanageriamrolearn}
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "8201"
        traffic.sidecar.istio.io/excludeOutboundPorts: "8201"
        proxy.istio.io/config: |
          proxyMetadata:
            OUTPUT_CERTS: /etc/tls-server
        sidecar.istio.io/userVolume: '[{"name": "tls-server", "emptyDir": {"medium": "Memory"}}]'
        sidecar.istio.io/userVolumeMount: '[{"name": "tls-server", "mountPath": "/etc/tls-server"}]'
      volumes:
      - name: tls-server
        emptyDir:
          medium: Memory
      # - name: tls-ca
      #   configMap:
      #     name: istio-ca-root-cert
      volumeMounts:
      - mountPath: /vault/userconfig/tls-server
        name: tls-server
        readOnly: true
      # - mountPath: /vault/userconfig/tls-ca
      #   name: tls-ca
      #   readOnly: true
      standalone:
        enabled: false
      dataStorage:
        enabled: true
        storageClass: "gp3"
        size: "10Gi"
      auditStorage:
        enabled: true
        storageClass: "gp3"
        size: "10Gi"
      ha:
        enabled: true
        replicas: 3
        raft:
          enabled: true
          setNodeId: true
          config: |
            ui = true

            listener "tcp" {
              address            = "[::]:8200"
              cluster_address    = "[::]:8201"
              tls_cert_file      = "/vault/userconfig/tls-server/cert-chain.pem"
              tls_key_file       = "/vault/userconfig/tls-server/key.pem"
              tls_client_ca_file = "/vault/userconfig/tls-server/root-cert.pem"
            }

            storage "raft" {
              path = "/vault/data"

              retry_join {
                leader_api_addr         = "https://vault-0.vault.svc.cluster.local:8200"
                leader_ca_cert_file     = "/vault/userconfig/tls-server/root-cert.pem"
                leader_client_cert_file = "/vault/userconfig/tls-server/cert-chain.pem"
                leader_client_key_file  = "/vault/userconfig/tls-server/key.pem"
              }
              retry_join {
                leader_api_addr         = "https://vault-1.vault.svc.cluster.local:8200"
                leader_ca_cert_file     = "/vault/userconfig/tls-server/root-cert.pem"
                leader_client_cert_file = "/vault/userconfig/tls-server/cert-chain.pem"
                leader_client_key_file  = "/vault/userconfig/tls-server/key.pem"
              }
              retry_join {
                leader_api_addr         = "https://vault-2.vault.svc.cluster.local:8200"
                leader_ca_cert_file     = "/vault/userconfig/tls-server/root-cert.pem"
                leader_client_cert_file = "/vault/userconfig/tls-server/cert-chain.pem"
                leader_client_key_file  = "/vault/userconfig/tls-server/key.pem"
              }

              autopilot {
                cleanup_dead_servers           = "true"
                last_contact_threshold         = "200ms"
                last_contact_failure_threshold = "10m"
                max_trailing_logs              = 250000
                min_quorum                     = 3
                server_stabilization_time      = "10s"
              }
            }

            service_registration "kubernetes" {}
    csi:
      image:
        repository: 274295908850.dkr.ecr.eu-west-1.amazonaws.com/hashicorp/vault-csi-provider
    ui:
      enabled: true
