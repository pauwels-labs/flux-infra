apiVersion: monitoring.grafana.com/v1alpha1
kind: GrafanaAgent
metadata:
  name: logs
  namespace: "${infranamespaceprefix}grafana-agent"
  labels:
    app.kubernetes.io/name: logs
spec:
  image: 274295908850.dkr.ecr.eu-west-1.amazonaws.com/i/grafana/agent:v0.33.2
  containers:
  - image: 274295908850.dkr.ecr.eu-west-1.amazonaws.com/i/cortex/tenant:1.7.4-jwt
    imagePullPolicy: IfNotPresent
    name: cortex-tenant
    ports:
    - containerPort: 20202
      name: cortex-tenant
      protocol: TCP
    volumeMounts:
    - mountPath: /data/
      name: cortex-tenant-config
    - mountPath: /token
      name: telemetry-credentials
  volumes:
  - configMap:
      name: cortex-tenant-logs
    name: cortex-tenant-config
  - secret:
      secretName: telemetry-credentials
    name: telemetry-credentials
  logLevel: info
  serviceAccountName: grafana-agent-logs
  logs:
    instanceSelector:
      matchLabels:
        monitoring.grafana.com/agent: logs
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-agent-logs
  namespace: "${infranamespaceprefix}grafana-agent"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-agent-logs
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  - /metrics/cadvisor
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-agent-logs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana-agent-logs
subjects:
- kind: ServiceAccount
  name: grafana-agent-logs
  namespace: "${infranamespaceprefix}grafana-agent"
