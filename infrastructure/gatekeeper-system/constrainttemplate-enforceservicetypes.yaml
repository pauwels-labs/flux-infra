apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: enforceservicetypes
  namespace: gatekeeper-system
spec:
  crd:
    spec:
      names:
        kind: EnforceServiceTypes
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          type: object
          properties:
            types:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8srequiredlabels

        violation[{"msg": msg, "details": {"given_type": type}}] {
          type := lower(input.review.object.spec.type)
          matched_type := [type | accepted_type := lower(input.parameters.types[_])
                                    accepted_type == type]
          count(matched_type) < 1
          name := input.review.object.metadata.name
          namespace := input.review.object.metadata.namespace
          msg := sprintf("Service object %v/%v has value %v for spec.type, it may only be one of: %v", [namespace, name, type, input.parameters.types])
        }
