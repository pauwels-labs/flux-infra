apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: enforceistioexportto
  namespace: gatekeeper-system
spec:
  crd:
    spec:
      names:
        kind: EnforceIstioExportTo
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          type: object
          properties:
            exportTo:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8srequiredlabels

        exports_match(submitted, expected) = true {
          submitted
          submitted == expected
        }

        violation[{"msg": msg, "details": {"kind": kind}}] {
          count(input.review.object.spec.exportTo) != 1
          kind := input.review.object.kind
          name := input.review.object.metadata.name
          namespace := input.review.object.metadata.namespace
          msg := sprintf("%v object %v/%v must have a defined exportTo field with a single entry of value '.'", [kind, namespace, name])
        }

        violation[{"msg": msg, "details": {"kind": kind}}] {
          submitted := {s | s := input.review.object.spec.exportTo[_]}
          required  := {r | r := input.parameters.exportTo[_]}
          not exports_match(submitted, required)
          kind := input.review.object.kind
          name := input.review.object.metadata.name
          namespace := input.review.object.metadata.namespace
          msg := sprintf("%v object %v/%v must have a defined exportTo field with a single entry of value '.'", [kind, namespace, name])
        }
